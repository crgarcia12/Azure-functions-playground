How to set up a Linux VM to deploy Azure Functions
- At the end it explains how to set up an Azure DevOps agent in this machine

# Install nodejs
https://websiteforstudents.com/install-the-latest-node-js-and-nmp-packages-on-ubuntu-16-04-18-04-lts/
sudo apt install curl
curl -sL https://deb.nodesource.com/setup_8.x | sudo bash -
sudo apt install nodejs

# Install Python
sudo add-apt-repository ppa:jonathonf/python-3.6
sudo apt-get update
sudo apt-get install python3.6
sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.5 1
sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 2
sudo update-alternatives --config python3
python3 -V

# Install Python V-Env
sudo apt-get install python3-venv

# If Gnome terminal does not lunch, we need to:
sudo rm /usr/bin/python3
sudo ln -s python3.5 /usr/bin/python3

# install docker
sudo apt  install docker.io

# Install DotNet
wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb
sudo add-apt-repository universe
sudo apt-get install apt-transport-https
sudo apt-get update
sudo apt-get install dotnet-sdk-2.1

# install azure cli
sudo apt-get install apt-transport-https lsb-release software-properties-common -y
AZ_REPO=$(lsb_release -cs)
echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | \
    sudo tee /etc/apt/sources.list.d/azure-cli.list
sudo apt-key --keyring /etc/apt/trusted.gpg.d/Microsoft.gpg adv \
     --keyserver packages.microsoft.com \
     --recv-keys BC528686B50D79E339D3721CEB3E94ADBE1229CF
sudo apt-get update
sudo apt-get install azure-cli

# Install Functions
curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-$(lsb_release -cs)-prod $(lsb_release -cs) main" > /etc/apt/sources.list.d/dotnetdev.list'
sudo apt-get update
sudo apt-get install azure-functions-core-tools

# Install function extensions to the project. This will download the packages for the input/output boundings 
Func extensions sync

# Publish function
cd gitrepos/Functions
python3.6 -m venv env
source env/bin/activate
sudo func azure functionapp publish Funcpyqueue2app  --build-native-deps

# How to make it AzDevOps agent machine
Mkdir Downloads && cd Downloads
wget https://vstsagentpackage.azureedge.net/agent/2.142.1/vsts-agent-linux-x64-2.142.1.tar.gz
cd .. & mkdir myagent && cd myagent
tar zxvf ~/Downloads/vsts-agent-linux-x64-2.142.1.tar.gz

# Configure the agent
./config.sh

# to run the agent
(./run.sh)